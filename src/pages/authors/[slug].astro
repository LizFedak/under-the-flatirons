---
export const prerender = true;
import { getCollection, getEntry } from 'astro:content';
import PostList from '../../components/posts/PostList.astro';
// (optional) import BaseHead from '../../components/BaseHead.astro';

export async function getStaticPaths() {
  const authors = await getCollection('authors');
  return authors.map((a) => ({ params: { slug: a.slug } }));
}

const { slug } = Astro.params;
const author = await getEntry('authors', slug);
if (!author) {
  throw new Error(`Author page: no author found for slug "${slug}"`);
}

// Posts where frontmatter "author" (reference) matches this author
const posts = await getCollection('blog', ({ data }) => data.author?.id === slug);
// newest first
posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>{author.data.name} — Under the Flatirons</title>
    <meta name="description" content={`Articles by ${author.data.name}`} />
    <!-- <BaseHead title={`${author.data.name} — Author`} description={`Articles by ${author.data.name}`} /> -->
    <style>
      .author-hero {
        display: flex; align-items: center; gap: 1rem; margin: 1.5rem 0;
        border-bottom: 1px solid var(--color-border, #e5e7eb); padding-bottom: 1rem;
      }
      .author-hero img {
        width: 72px; height: 72px; border-radius: 9999px; object-fit: cover;
      }
      .author-name { font-size: 1.5rem; margin: 0; }
      .author-bio { margin: .25rem 0 0; color: var(--color-font-meta, #5E5E5E); }
      .author-social a { color: var(--color-link, #1F5E5F); text-decoration: none; }
      .author-social a:hover { text-decoration: underline; }
      .empty { margin: 2rem 0; color: #6b7280; }
    </style>
  </head>
  <body>
    <main>
      <section class="author-hero">
        {author.data.avatar && (
          <img src={author.data.avatar} alt={`Photo of ${author.data.name}`} loading="lazy" decoding="async" />
        )}
        <div>
          <h1 class="author-name">{author.data.name}</h1>
          {author.data.bio && <p class="author-bio">{author.data.bio}</p>}
          {author.data.twitter && (
            <p class="author-social">
              <a href={`https://x.com/${author.data.twitter}`} rel="me noopener" target="_blank">
                @{author.data.twitter}
              </a>
            </p>
          )}
        </div>
      </section>

      {posts.length ? (
        <PostList posts={posts} showThumb={true} />
      ) : (
        <p class="empty">No articles yet.</p>
      )}
    </main>
  </body>
</html>
